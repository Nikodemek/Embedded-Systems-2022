ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 1


   1              		.code	16
   2              		.file	"eepromTest.c"
   3              		.section	.debug_abbrev,"",%progbits
   4              	.Ldebug_abbrev0:
   5              		.section	.debug_info,"",%progbits
   6              	.Ldebug_info0:
   7              		.section	.debug_line,"",%progbits
   8              	.Ldebug_line0:
   9 0000 8D000000 		.text
   9      02004300 
   9      00000201 
   9      FB0E0D00 
   9      01010101 
  10              	.Ltext0:
  11              		.section	.rodata.str1.4,"aMS",%progbits,1
  12              		.align	2
  13              	.LC4:
  14 0000 0A546573 		.ascii	"\012Test #1 - write string '%s' to address 0x0000\000"
  14      74202331 
  14      202D2077 
  14      72697465 
  14      20737472 
  15 002f 00       		.align	2
  16              	.LC6:
  17 0030 0A202020 		.ascii	"\012        - failed (error code = %d)!\000"
  17      20202020 
  17      202D2066 
  17      61696C65 
  17      64202865 
  18 0055 000000   		.align	2
  19              	.LC8:
  20 0058 0A202020 		.ascii	"\012        - program cycle failed!\000"
  20      20202020 
  20      202D2070 
  20      726F6772 
  20      616D2063 
  21 0079 000000   		.align	2
  22              	.LC10:
  23 007c 0A546573 		.ascii	"\012Test #2 - write string '%s' to address 0x0040\000"
  23      74202332 
  23      202D2077 
  23      72697465 
  23      20737472 
  24 00ab 00       		.align	2
  25              	.LC12:
  26 00ac 0A546573 		.ascii	"\012Test #3 - read string from address 0x0000\000"
  26      74202333 
  26      202D2072 
  26      65616420 
  26      73747269 
  27 00d7 00       		.align	2
  28              	.LC14:
  29 00d8 0A202020 		.ascii	"\012        - wrong length (read string is %d chara"
  29      20202020 
  29      202D2077 
  29      726F6E67 
  29      206C656E 
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 2


  30 0108 63746572 		.ascii	"cters long)! %d\000"
  30      73206C6F 
  30      6E672921 
  30      20256400 
  31              		.align	2
  32              	.LC16:
  33 0118 0A25642C 		.ascii	"\012%d,%d,%d,%d,%d %d,%d,%d,%d,%d %d\000"
  33      25642C25 
  33      642C2564 
  33      2C256420 
  33      25642C25 
  34 013a 0000     		.align	2
  35              	.LC18:
  36 013c 0A256325 		.ascii	"\012%c%c%c%c%c%c%c%c%c%c%c\000"
  36      63256325 
  36      63256325 
  36      63256325 
  36      63256325 
  37              		.align	2
  38              	.LC20:
  39 0154 0A546573 		.ascii	"\012Test #4 - read string from address 0x0040\000"
  39      74202334 
  39      202D2072 
  39      65616420 
  39      73747269 
  40 017f 00       		.align	2
  41              	.LC22:
  42 0180 0A202020 		.ascii	"\012        - wrong length (read string is %d chara"
  42      20202020 
  42      202D2077 
  42      726F6E67 
  42      206C656E 
  43 01b0 63746572 		.ascii	"cters long)!\000"
  43      73206C6F 
  43      6E672921 
  43      00
  44 01bd 000000   		.align	2
  45              	.LC24:
  46 01c0 0A546573 		.ascii	"\012Test #4 - read string from address 0x00a0\000"
  46      74202334 
  46      202D2072 
  46      65616420 
  46      73747269 
  47 01eb 00       		.align	2
  48              	.LC26:
  49 01ec 0A546573 		.ascii	"\012Test #5 - write string '%s' to address 0x0004\000"
  49      74202335 
  49      202D2077 
  49      72697465 
  49      20737472 
  50 021b 00       		.align	2
  51              	.LC28:
  52 021c 0A546573 		.ascii	"\012Test #6 - read string from address 0x0000\000"
  52      74202336 
  52      202D2072 
  52      65616420 
  52      73747269 
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 3


  53 0247 00       		.align	2
  54              	.LC0:
  55 0248 53747269 		.ascii	"String #1\000"
  55      6E672023 
  55      3100
  56 0252 0000     		.align	2
  57              	.LC2:
  58 0254 73547249 		.ascii	"sTrInG #2\000"
  58      6E472023 
  58      3200
  59 025e 0000     		.text
  60              		.align	2
  61              		.global	testEEPROM
  62              		.code 16
  63              		.thumb_func
  64              		.type	testEEPROM, %function
  65              	testEEPROM:
  66              	.LFB2:
  67              		.file 1 "eepromTest.c"
   1:eepromTest.c  **** /******************************************************************************
   2:eepromTest.c  ****  *
   3:eepromTest.c  ****  * Copyright:
   4:eepromTest.c  ****  *    (C) 2005 Embedded Artists AB
   5:eepromTest.c  ****  *
   6:eepromTest.c  ****  * File:
   7:eepromTest.c  ****  *    eepromTest.c
   8:eepromTest.c  ****  *
   9:eepromTest.c  ****  *****************************************************************************/
  10:eepromTest.c  **** 
  11:eepromTest.c  **** /******************************************************************************
  12:eepromTest.c  ****  * Includes
  13:eepromTest.c  ****  *****************************************************************************/
  14:eepromTest.c  **** #include "pre_emptive_os/api/general.h"
  15:eepromTest.c  **** #include <lpc2xxx.h>
  16:eepromTest.c  **** #include "startup/config.h"
  17:eepromTest.c  **** #include <printf_P.h>
  18:eepromTest.c  **** #include "eeprom.h"
  19:eepromTest.c  **** #include <string.h>
  20:eepromTest.c  **** 
  21:eepromTest.c  **** 
  22:eepromTest.c  **** /******************************************************************************
  23:eepromTest.c  ****  * Defines and typedefs
  24:eepromTest.c  ****  *****************************************************************************/
  25:eepromTest.c  **** #define MAX_LENGTH 14
  26:eepromTest.c  **** 
  27:eepromTest.c  **** /*****************************************************************************
  28:eepromTest.c  ****  * Public function prototypes
  29:eepromTest.c  ****  ****************************************************************************/
  30:eepromTest.c  **** 
  31:eepromTest.c  **** /*****************************************************************************
  32:eepromTest.c  ****  *
  33:eepromTest.c  ****  * Description:
  34:eepromTest.c  ****  *    Test EEPROM
  35:eepromTest.c  ****  *
  36:eepromTest.c  ****  ****************************************************************************/
  37:eepromTest.c  **** tU8
  38:eepromTest.c  **** testEEPROM(void)
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 4


  39:eepromTest.c  **** {
  68              		.loc 1 39 0
  69 0000 70B5     		push	{r4, r5, r6, lr}
  70              	.LCFI0:
  71 0002 91B0     		sub	sp, sp, #68
  72              	.LCFI1:
  40:eepromTest.c  ****   tU8 eepromTestResultOK;
  41:eepromTest.c  ****   tU8 testString1[] = "String #1";
  73              		.loc 1 41 0
  74 0004 6D46     		mov	r5, sp
  75 0006 3A35     		add	r5, r5, #58
  76 0008 8549     		ldr	r1, .L31
  77 000a 0A22     		mov	r2, #10
  78 000c 281C     		mov	r0, r5
  79 000e FFF7FEFF 		bl	memcpy
  42:eepromTest.c  ****   tU8 testString2[] = "sTrInG #2";
  80              		.loc 1 42 0
  81 0012 844B     		ldr	r3, .L31+4
  82 0014 0CAA     		add	r2, sp, #48
  83 0016 101C     		mov	r0, r2
  84 0018 191C     		mov	r1, r3
  85 001a 50C9     		ldmia	r1!, {r4, r6}
  86 001c 50C0     		stmia	r0!, {r4, r6}
  87 001e 1B89     		ldrh	r3, [r3, #8]
  43:eepromTest.c  ****   tU8 testBuf[MAX_LENGTH];
  44:eepromTest.c  ****   tS8 errorCode;
  45:eepromTest.c  ****   
  46:eepromTest.c  ****   eepromTestResultOK = TRUE;
  47:eepromTest.c  **** //  printf("\nTest #1 - write string '%s' to address 0x0000", testString1);
  48:eepromTest.c  ****   errorCode = eepromWrite(0x0000, testString1, sizeof(testString1));
  88              		.loc 1 48 0
  89 0020 0020     		mov	r0, #0
  90              		.loc 1 42 0
  91 0022 1381     		strh	r3, [r2, #8]
  92              		.loc 1 48 0
  93 0024 291C     		mov	r1, r5
  94 0026 0A22     		mov	r2, #10
  95 0028 FFF7FEFF 		bl	eepromWrite
  49:eepromTest.c  ****   if (errorCode == I2C_CODE_OK)
  96              		.loc 1 49 0
  97 002c 0006     		lsl	r0, r0, #24
  98 002e 0416     		asr	r4, r0, #24
  99 0030 012C     		cmp	r4, #1
 100 0032 01D1     		bne	.L2
 101 0034 0126     		mov	r6, #1
 102              	.LVL0:
 103 0036 08E0     		b	.L4
 104              	.LVL1:
 105              	.L2:
  50:eepromTest.c  **** ;//    printf("\n        - done (status code OK)");
  51:eepromTest.c  ****   else
  52:eepromTest.c  ****   {
  53:eepromTest.c  ****     printf("\nTest #1 - write string '%s' to address 0x0000", testString1);
 106              		.loc 1 53 0
 107 0038 7B48     		ldr	r0, .L31+8
 108 003a 291C     		mov	r1, r5
 109 003c FFF7FEFF 		bl	simplePrintf
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 5


  54:eepromTest.c  ****     printf("\n        - failed (error code = %d)!", errorCode);
 110              		.loc 1 54 0
 111 0040 7A48     		ldr	r0, .L31+12
 112 0042 211C     		mov	r1, r4
 113 0044 FFF7FEFF 		bl	simplePrintf
 114 0048 0026     		mov	r6, #0
 115              	.LVL2:
 116              	.L4:
  55:eepromTest.c  ****     eepromTestResultOK = FALSE;
  56:eepromTest.c  ****   }
  57:eepromTest.c  ****   
  58:eepromTest.c  ****   if (eepromPoll() == I2C_CODE_OK)
 117              		.loc 1 58 0
 118 004a FFF7FEFF 		bl	eepromPoll
 119 004e 0006     		lsl	r0, r0, #24
 120 0050 0016     		asr	r0, r0, #24
 121 0052 0128     		cmp	r0, #1
 122 0054 08D0     		beq	.L5
  59:eepromTest.c  **** ;//    printf("\n        - program cycle completed");
  60:eepromTest.c  ****   else
  61:eepromTest.c  ****   {
  62:eepromTest.c  ****     printf("\nTest #1 - write string '%s' to address 0x0000", testString1);
 123              		.loc 1 62 0
 124 0056 6946     		mov	r1, sp
 125 0058 7348     		ldr	r0, .L31+8
 126 005a 3A31     		add	r1, r1, #58
 127 005c FFF7FEFF 		bl	simplePrintf
  63:eepromTest.c  ****     printf("\n        - program cycle failed!");
 128              		.loc 1 63 0
 129 0060 7348     		ldr	r0, .L31+16
 130 0062 FFF7FEFF 		bl	simplePrintf
 131 0066 0026     		mov	r6, #0
 132              	.L5:
  64:eepromTest.c  ****     eepromTestResultOK = FALSE;
  65:eepromTest.c  ****   }
  66:eepromTest.c  **** 
  67:eepromTest.c  **** //  printf("\nTest #2 - write string '%s' to address 0x0040", testString2);
  68:eepromTest.c  ****   errorCode = eepromWrite(0x0040, testString2, sizeof(testString2));
 133              		.loc 1 68 0
 134 0068 0CAD     		add	r5, sp, #48
 135 006a 4020     		mov	r0, #64
 136 006c 291C     		mov	r1, r5
 137 006e 0A22     		mov	r2, #10
 138 0070 FFF7FEFF 		bl	eepromWrite
  69:eepromTest.c  ****   if (errorCode == I2C_CODE_OK)
 139              		.loc 1 69 0
 140 0074 0006     		lsl	r0, r0, #24
 141 0076 0416     		asr	r4, r0, #24
 142 0078 012C     		cmp	r4, #1
 143 007a 08D0     		beq	.L7
  70:eepromTest.c  **** ;//    printf("\n        - done (status code OK)");
  71:eepromTest.c  ****   else
  72:eepromTest.c  ****   {
  73:eepromTest.c  ****   	printf("\nTest #2 - write string '%s' to address 0x0040", testString2);
 144              		.loc 1 73 0
 145 007c 6D48     		ldr	r0, .L31+20
 146 007e 291C     		mov	r1, r5
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 6


 147 0080 FFF7FEFF 		bl	simplePrintf
  74:eepromTest.c  ****     printf("\n        - failed (error code = %d)!", errorCode);
 148              		.loc 1 74 0
 149 0084 6948     		ldr	r0, .L31+12
 150 0086 211C     		mov	r1, r4
 151 0088 FFF7FEFF 		bl	simplePrintf
 152 008c 0026     		mov	r6, #0
 153              	.L7:
  75:eepromTest.c  ****     eepromTestResultOK = FALSE;
  76:eepromTest.c  ****   }
  77:eepromTest.c  ****    
  78:eepromTest.c  ****   if (eepromPoll() == I2C_CODE_OK)
 154              		.loc 1 78 0
 155 008e FFF7FEFF 		bl	eepromPoll
 156 0092 0006     		lsl	r0, r0, #24
 157 0094 0016     		asr	r0, r0, #24
 158 0096 0128     		cmp	r0, #1
 159 0098 07D0     		beq	.L9
  79:eepromTest.c  **** ;//    printf("\n        - program cycle completed");
  80:eepromTest.c  ****   else
  81:eepromTest.c  ****   {
  82:eepromTest.c  ****   	printf("\nTest #2 - write string '%s' to address 0x0040", testString2);
 160              		.loc 1 82 0
 161 009a 6648     		ldr	r0, .L31+20
 162 009c 291C     		mov	r1, r5
 163 009e FFF7FEFF 		bl	simplePrintf
  83:eepromTest.c  ****     printf("\n        - program cycle failed!");
 164              		.loc 1 83 0
 165 00a2 6348     		ldr	r0, .L31+16
 166 00a4 FFF7FEFF 		bl	simplePrintf
 167 00a8 0026     		mov	r6, #0
 168              	.L9:
  84:eepromTest.c  ****     eepromTestResultOK = FALSE;
  85:eepromTest.c  ****   }
  86:eepromTest.c  **** 
  87:eepromTest.c  ****   /*
  88:eepromTest.c  ****    * Read from eeprom
  89:eepromTest.c  ****    */
  90:eepromTest.c  **** //  printf("\nTest #3 - read string from address 0x0000");
  91:eepromTest.c  ****   errorCode = eepromPageRead(0x0000, testBuf, MAX_LENGTH);
 169              		.loc 1 91 0
 170 00aa 6D46     		mov	r5, sp
 171 00ac 2235     		add	r5, r5, #34
 172 00ae 0020     		mov	r0, #0
 173 00b0 291C     		mov	r1, r5
 174 00b2 0E22     		mov	r2, #14
 175 00b4 FFF7FEFF 		bl	eepromPageRead
  92:eepromTest.c  ****   if (errorCode == I2C_CODE_OK)
 176              		.loc 1 92 0
 177 00b8 0006     		lsl	r0, r0, #24
 178 00ba 0416     		asr	r4, r0, #24
 179 00bc 012C     		cmp	r4, #1
 180 00be 3DD1     		bne	.L11
  93:eepromTest.c  ****   {
  94:eepromTest.c  ****     if (strlen(testBuf) == sizeof(testString1)-1)
 181              		.loc 1 94 0
 182 00c0 281C     		mov	r0, r5
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 7


 183 00c2 FFF7FEFF 		bl	strlen
 184 00c6 0928     		cmp	r0, #9
 185 00c8 40D0     		beq	.L13
  95:eepromTest.c  **** ;//      printf("\n        - string is '%s'", testBuf);
  96:eepromTest.c  ****     else
  97:eepromTest.c  ****     {
  98:eepromTest.c  ****     	printf("\nTest #3 - read string from address 0x0000");
 186              		.loc 1 98 0
 187 00ca 5B48     		ldr	r0, .L31+24
 188 00cc FFF7FEFF 		bl	simplePrintf
  99:eepromTest.c  ****       printf("\n        - wrong length (read string is %d characters long)! %d", strlen(testBuf),  
 189              		.loc 1 99 0
 190 00d0 281C     		mov	r0, r5
 191 00d2 FFF7FEFF 		bl	strlen
 192 00d6 594C     		ldr	r4, .L31+28
 193 00d8 011C     		mov	r1, r0
 194 00da 0922     		mov	r2, #9
 195 00dc 201C     		mov	r0, r4
 196 00de FFF7FEFF 		bl	simplePrintf
 100:eepromTest.c  **** 
 101:eepromTest.c  ****       printf("\n%d,%d,%d,%d,%d %d,%d,%d,%d,%d %d",
 197              		.loc 1 101 0
 198 00e2 EC78     		ldrb	r4, [r5, #3]
 199 00e4 2978     		ldrb	r1, [r5]
 200 00e6 6A78     		ldrb	r2, [r5, #1]
 201 00e8 AB78     		ldrb	r3, [r5, #2]
 202 00ea 0094     		str	r4, [sp]
 203 00ec 2C79     		ldrb	r4, [r5, #4]
 204 00ee 0194     		str	r4, [sp, #4]
 205 00f0 6C79     		ldrb	r4, [r5, #5]
 206 00f2 0294     		str	r4, [sp, #8]
 207 00f4 AC79     		ldrb	r4, [r5, #6]
 208 00f6 0394     		str	r4, [sp, #12]
 209 00f8 EC79     		ldrb	r4, [r5, #7]
 210 00fa 0494     		str	r4, [sp, #16]
 211 00fc 2C7A     		ldrb	r4, [r5, #8]
 212 00fe 0594     		str	r4, [sp, #20]
 213 0100 6C7A     		ldrb	r4, [r5, #9]
 214 0102 0694     		str	r4, [sp, #24]
 215 0104 AC7A     		ldrb	r4, [r5, #10]
 216 0106 4E48     		ldr	r0, .L31+32
 217 0108 0794     		str	r4, [sp, #28]
 218 010a FFF7FEFF 		bl	simplePrintf
 102:eepromTest.c  ****              testBuf[0],testBuf[1],testBuf[2],testBuf[3],testBuf[4],testBuf[5],testBuf[6],testBuf[7
 103:eepromTest.c  ****       printf("\n%c%c%c%c%c%c%c%c%c%c%c",
 219              		.loc 1 103 0
 220 010e EC78     		ldrb	r4, [r5, #3]
 221 0110 2978     		ldrb	r1, [r5]
 222 0112 6A78     		ldrb	r2, [r5, #1]
 223 0114 AB78     		ldrb	r3, [r5, #2]
 224 0116 0094     		str	r4, [sp]
 225 0118 2C79     		ldrb	r4, [r5, #4]
 226 011a 0194     		str	r4, [sp, #4]
 227 011c 6C79     		ldrb	r4, [r5, #5]
 228 011e 0294     		str	r4, [sp, #8]
 229 0120 AC79     		ldrb	r4, [r5, #6]
 230 0122 0394     		str	r4, [sp, #12]
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 8


 231 0124 EC79     		ldrb	r4, [r5, #7]
 232 0126 0494     		str	r4, [sp, #16]
 233 0128 2C7A     		ldrb	r4, [r5, #8]
 234 012a 0594     		str	r4, [sp, #20]
 235 012c 6C7A     		ldrb	r4, [r5, #9]
 236 012e 0694     		str	r4, [sp, #24]
 237 0130 AC7A     		ldrb	r4, [r5, #10]
 238 0132 4448     		ldr	r0, .L31+36
 239 0134 0794     		str	r4, [sp, #28]
 240 0136 FFF7FEFF 		bl	simplePrintf
 241 013a 06E0     		b	.L28
 242              	.L11:
 104:eepromTest.c  ****              testBuf[0],testBuf[1],testBuf[2],testBuf[3],testBuf[4],testBuf[5],testBuf[6],testBuf[7
 105:eepromTest.c  **** 
 106:eepromTest.c  ****       eepromTestResultOK = FALSE;
 107:eepromTest.c  ****     }
 108:eepromTest.c  ****   }
 109:eepromTest.c  ****   else
 110:eepromTest.c  ****   {
 111:eepromTest.c  ****   	printf("\nTest #3 - read string from address 0x0000");
 243              		.loc 1 111 0
 244 013c 3E48     		ldr	r0, .L31+24
 245 013e FFF7FEFF 		bl	simplePrintf
 112:eepromTest.c  ****     printf("\n        - failed (error code = %d)!", errorCode);
 246              		.loc 1 112 0
 247 0142 3A48     		ldr	r0, .L31+12
 248 0144 211C     		mov	r1, r4
 249 0146 FFF7FEFF 		bl	simplePrintf
 250              	.L28:
 251 014a 0026     		mov	r6, #0
 252              	.L13:
 113:eepromTest.c  ****     eepromTestResultOK = FALSE;
 114:eepromTest.c  ****   }
 115:eepromTest.c  **** 
 116:eepromTest.c  **** //  printf("\nTest #4 - read string from address 0x0040");
 117:eepromTest.c  ****   errorCode = eepromPageRead(0x0040, testBuf, MAX_LENGTH);
 253              		.loc 1 117 0
 254 014c 6D46     		mov	r5, sp
 255 014e 2235     		add	r5, r5, #34
 256 0150 4020     		mov	r0, #64
 257 0152 291C     		mov	r1, r5
 258 0154 0E22     		mov	r2, #14
 259 0156 FFF7FEFF 		bl	eepromPageRead
 118:eepromTest.c  ****   if (errorCode == I2C_CODE_OK)
 260              		.loc 1 118 0
 261 015a 0006     		lsl	r0, r0, #24
 262 015c 0416     		asr	r4, r0, #24
 263 015e 012C     		cmp	r4, #1
 264 0160 0ED1     		bne	.L15
 119:eepromTest.c  ****   {
 120:eepromTest.c  ****     if (strlen(testBuf) == sizeof(testString2)-1)
 265              		.loc 1 120 0
 266 0162 281C     		mov	r0, r5
 267 0164 FFF7FEFF 		bl	strlen
 268 0168 0928     		cmp	r0, #9
 269 016a 11D0     		beq	.L17
 121:eepromTest.c  **** ;//      printf("\n        - string is '%s'", testBuf);
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 9


 122:eepromTest.c  ****     else
 123:eepromTest.c  ****     {
 124:eepromTest.c  ****     	printf("\nTest #4 - read string from address 0x0040");
 270              		.loc 1 124 0
 271 016c 3648     		ldr	r0, .L31+40
 272 016e FFF7FEFF 		bl	simplePrintf
 125:eepromTest.c  ****       printf("\n        - wrong length (read string is %d characters long)!", strlen(testBuf));
 273              		.loc 1 125 0
 274 0172 281C     		mov	r0, r5
 275 0174 FFF7FEFF 		bl	strlen
 276 0178 344C     		ldr	r4, .L31+44
 277 017a 011C     		mov	r1, r0
 278 017c 201C     		mov	r0, r4
 279 017e 04E0     		b	.L29
 280              	.L15:
 126:eepromTest.c  ****       eepromTestResultOK = FALSE;
 127:eepromTest.c  ****     }
 128:eepromTest.c  ****   }
 129:eepromTest.c  ****   else
 130:eepromTest.c  ****   {
 131:eepromTest.c  ****   	printf("\nTest #4 - read string from address 0x00a0");
 281              		.loc 1 131 0
 282 0180 3348     		ldr	r0, .L31+48
 283 0182 FFF7FEFF 		bl	simplePrintf
 132:eepromTest.c  ****     printf("\n        - failed (error code = %d)!", errorCode);
 284              		.loc 1 132 0
 285 0186 2948     		ldr	r0, .L31+12
 286 0188 211C     		mov	r1, r4
 287              	.L29:
 288 018a FFF7FEFF 		bl	simplePrintf
 289 018e 0026     		mov	r6, #0
 290              	.L17:
 133:eepromTest.c  ****     eepromTestResultOK = FALSE;
 134:eepromTest.c  ****   }
 135:eepromTest.c  **** 
 136:eepromTest.c  ****   /*
 137:eepromTest.c  ****    * Write/Read from eeprom
 138:eepromTest.c  ****    */
 139:eepromTest.c  **** //  printf("\nTest #5 - write string '%s' to address 0x0004", testString2);
 140:eepromTest.c  ****   errorCode = eepromWrite(0x0004, testString2, sizeof(testString2));
 291              		.loc 1 140 0
 292 0190 0CAD     		add	r5, sp, #48
 293 0192 0420     		mov	r0, #4
 294 0194 291C     		mov	r1, r5
 295 0196 0A22     		mov	r2, #10
 296 0198 FFF7FEFF 		bl	eepromWrite
 141:eepromTest.c  ****   if (errorCode == I2C_CODE_OK)
 297              		.loc 1 141 0
 298 019c 0006     		lsl	r0, r0, #24
 299 019e 0416     		asr	r4, r0, #24
 300 01a0 012C     		cmp	r4, #1
 301 01a2 08D0     		beq	.L19
 142:eepromTest.c  **** ;//    printf("\n        - done (status code OK)");
 143:eepromTest.c  ****   else
 144:eepromTest.c  ****   {
 145:eepromTest.c  ****   	printf("\nTest #5 - write string '%s' to address 0x0004", testString2);
 302              		.loc 1 145 0
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 10


 303 01a4 2B48     		ldr	r0, .L31+52
 304 01a6 291C     		mov	r1, r5
 305 01a8 FFF7FEFF 		bl	simplePrintf
 146:eepromTest.c  ****     printf("\n        - failed (error code = %d)!", errorCode);
 306              		.loc 1 146 0
 307 01ac 1F48     		ldr	r0, .L31+12
 308 01ae 211C     		mov	r1, r4
 309 01b0 FFF7FEFF 		bl	simplePrintf
 310 01b4 0026     		mov	r6, #0
 311              	.L19:
 147:eepromTest.c  ****     eepromTestResultOK = FALSE;
 148:eepromTest.c  ****   }
 149:eepromTest.c  ****   
 150:eepromTest.c  ****   if (eepromPoll() == I2C_CODE_OK)
 312              		.loc 1 150 0
 313 01b6 FFF7FEFF 		bl	eepromPoll
 314 01ba 0006     		lsl	r0, r0, #24
 315 01bc 0016     		asr	r0, r0, #24
 316 01be 0128     		cmp	r0, #1
 317 01c0 07D0     		beq	.L21
 151:eepromTest.c  **** ;//    printf("\n        - program cycle completed");
 152:eepromTest.c  ****   else
 153:eepromTest.c  ****   {
 154:eepromTest.c  ****   	printf("\nTest #5 - write string '%s' to address 0x0004", testString2);
 318              		.loc 1 154 0
 319 01c2 2448     		ldr	r0, .L31+52
 320 01c4 291C     		mov	r1, r5
 321 01c6 FFF7FEFF 		bl	simplePrintf
 155:eepromTest.c  ****     printf("\n        - program cycle failed!");
 322              		.loc 1 155 0
 323 01ca 1948     		ldr	r0, .L31+16
 324 01cc FFF7FEFF 		bl	simplePrintf
 325 01d0 0026     		mov	r6, #0
 326              	.L21:
 156:eepromTest.c  ****     eepromTestResultOK = FALSE;
 157:eepromTest.c  ****   }
 158:eepromTest.c  **** 
 159:eepromTest.c  **** //  printf("\nTest #6 - read string from address 0x0000");
 160:eepromTest.c  ****   errorCode = eepromPageRead(0x0000, testBuf, MAX_LENGTH);
 327              		.loc 1 160 0
 328 01d2 6D46     		mov	r5, sp
 329 01d4 2235     		add	r5, r5, #34
 330 01d6 0020     		mov	r0, #0
 331 01d8 291C     		mov	r1, r5
 332 01da 0E22     		mov	r2, #14
 333 01dc FFF7FEFF 		bl	eepromPageRead
 161:eepromTest.c  ****   if (errorCode == I2C_CODE_OK)
 334              		.loc 1 161 0
 335 01e0 0006     		lsl	r0, r0, #24
 336 01e2 0416     		asr	r4, r0, #24
 337 01e4 012C     		cmp	r4, #1
 338 01e6 0ED1     		bne	.L23
 162:eepromTest.c  ****   {
 163:eepromTest.c  ****     if (strlen(testBuf) == sizeof(testString2)-1+4)
 339              		.loc 1 163 0
 340 01e8 281C     		mov	r0, r5
 341 01ea FFF7FEFF 		bl	strlen
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 11


 342 01ee 0D28     		cmp	r0, #13
 343 01f0 11D0     		beq	.L25
 164:eepromTest.c  **** ;//      printf("\n        - string is '%s'", testBuf);
 165:eepromTest.c  ****     else
 166:eepromTest.c  ****     {
 167:eepromTest.c  ****     	printf("\nTest #6 - read string from address 0x0000");
 344              		.loc 1 167 0
 345 01f2 1948     		ldr	r0, .L31+56
 346 01f4 FFF7FEFF 		bl	simplePrintf
 168:eepromTest.c  ****       printf("\n        - wrong length (read string is %d characters long)!", strlen(testBuf));
 347              		.loc 1 168 0
 348 01f8 281C     		mov	r0, r5
 349 01fa FFF7FEFF 		bl	strlen
 350 01fe 134C     		ldr	r4, .L31+44
 351 0200 011C     		mov	r1, r0
 352 0202 201C     		mov	r0, r4
 353 0204 04E0     		b	.L30
 354              	.L23:
 169:eepromTest.c  ****       eepromTestResultOK = FALSE;
 170:eepromTest.c  ****     }
 171:eepromTest.c  ****   }
 172:eepromTest.c  ****   else
 173:eepromTest.c  ****   {
 174:eepromTest.c  ****   	printf("\nTest #6 - read string from address 0x0000");
 355              		.loc 1 174 0
 356 0206 1448     		ldr	r0, .L31+56
 357 0208 FFF7FEFF 		bl	simplePrintf
 175:eepromTest.c  ****     printf("\n        - failed (error code = %d)!", errorCode);
 358              		.loc 1 175 0
 359 020c 0748     		ldr	r0, .L31+12
 360 020e 211C     		mov	r1, r4
 361              	.L30:
 362 0210 FFF7FEFF 		bl	simplePrintf
 363 0214 0026     		mov	r6, #0
 364              	.L25:
 176:eepromTest.c  ****     eepromTestResultOK = FALSE;
 177:eepromTest.c  ****   }
 178:eepromTest.c  ****   
 179:eepromTest.c  ****   return eepromTestResultOK;
 180:eepromTest.c  **** }
 365              		.loc 1 180 0
 366 0216 301C     		mov	r0, r6
 367 0218 11B0     		add	sp, sp, #68
 368              		@ sp needed for prologue
 369              	.LVL3:
 370 021a 70BC     		pop	{r4, r5, r6}
 371 021c 02BC     		pop	{r1}
 372 021e 0847     		bx	r1
 373              	.L32:
 374              		.align	2
 375              	.L31:
 376 0220 48020000 		.word	.LC0
 377 0224 54020000 		.word	.LC2
 378 0228 00000000 		.word	.LC4
 379 022c 30000000 		.word	.LC6
 380 0230 58000000 		.word	.LC8
 381 0234 7C000000 		.word	.LC10
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 12


 382 0238 AC000000 		.word	.LC12
 383 023c D8000000 		.word	.LC14
 384 0240 18010000 		.word	.LC16
 385 0244 3C010000 		.word	.LC18
 386 0248 54010000 		.word	.LC20
 387 024c 80010000 		.word	.LC22
 388 0250 C0010000 		.word	.LC24
 389 0254 EC010000 		.word	.LC26
 390 0258 1C020000 		.word	.LC28
 391              	.LFE2:
 392              		.size	testEEPROM, .-testEEPROM
 393              		.section	.debug_frame,"",%progbits
 394              	.Lframe0:
 395 0000 0C000000 		.4byte	.LECIE0-.LSCIE0
 396              	.LSCIE0:
 397 0004 FFFFFFFF 		.4byte	0xffffffff
 398 0008 01       		.byte	0x1
 399 0009 00       		.ascii	"\000"
 400 000a 01       		.uleb128 0x1
 401 000b 7C       		.sleb128 -4
 402 000c 0E       		.byte	0xe
 403 000d 0C       		.byte	0xc
 404 000e 0D       		.uleb128 0xd
 405 000f 00       		.uleb128 0x0
 406              		.align	2
 407              	.LECIE0:
 408              	.LSFDE0:
 409 0010 1C000000 		.4byte	.LEFDE0-.LASFDE0
 410              	.LASFDE0:
 411 0014 00000000 		.4byte	.Lframe0
 412 0018 00000000 		.4byte	.LFB2
 413 001c 5C020000 		.4byte	.LFE2-.LFB2
 414 0020 42       		.byte	0x4
 415              		.4byte	.LCFI0-.LFB2
 416 0021 0E       		.byte	0xe
 417 0022 10       		.uleb128 0x10
 418 0023 84       		.byte	0x84
 419 0024 04       		.uleb128 0x4
 420 0025 85       		.byte	0x85
 421 0026 03       		.uleb128 0x3
 422 0027 86       		.byte	0x86
 423 0028 02       		.uleb128 0x2
 424 0029 8E       		.byte	0x8e
 425 002a 01       		.uleb128 0x1
 426 002b 42       		.byte	0x4
 427              		.4byte	.LCFI1-.LCFI0
 428 002c 0E       		.byte	0xe
 429 002d 54       		.uleb128 0x54
 430 002e 0000     		.align	2
 431              	.LEFDE0:
 432              		.file 2 "pre_emptive_os/api/general.h"
 433              		.text
 434              	.Letext0:
 435              		.section	.debug_loc,"",%progbits
 436              	.Ldebug_loc0:
 437              	.LLST0:
 438 0000 00000000 		.4byte	.LFB2-.Ltext0
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 13


 439 0004 02000000 		.4byte	.LCFI0-.Ltext0
 440 0008 0100     		.2byte	0x1
 441 000a 5D       		.byte	0x5d
 442 000b 02000000 		.4byte	.LCFI0-.Ltext0
 443 000f 04000000 		.4byte	.LCFI1-.Ltext0
 444 0013 0200     		.2byte	0x2
 445 0015 7D       		.byte	0x7d
 446 0016 10       		.sleb128 16
 447 0017 04000000 		.4byte	.LCFI1-.Ltext0
 448 001b 5C020000 		.4byte	.LFE2-.Ltext0
 449 001f 0300     		.2byte	0x3
 450 0021 7D       		.byte	0x7d
 451 0022 D400     		.sleb128 84
 452 0024 00000000 		.4byte	0x0
 453 0028 00000000 		.4byte	0x0
 454              	.LLST1:
 455 002c 36000000 		.4byte	.LVL0-.Ltext0
 456 0030 38000000 		.4byte	.LVL1-.Ltext0
 457 0034 0100     		.2byte	0x1
 458 0036 56       		.byte	0x56
 459 0037 4A000000 		.4byte	.LVL2-.Ltext0
 460 003b 1A020000 		.4byte	.LVL3-.Ltext0
 461 003f 0100     		.2byte	0x1
 462 0041 56       		.byte	0x56
 463 0042 00000000 		.4byte	0x0
 464 0046 00000000 		.4byte	0x0
 465              		.section	.debug_info
 466 0000 1A010000 		.4byte	0x11a
 467 0004 0200     		.2byte	0x2
 468 0006 00000000 		.4byte	.Ldebug_abbrev0
 469 000a 04       		.byte	0x4
 470 000b 01       		.uleb128 0x1
 471 000c 00000000 		.4byte	.Ldebug_line0
 472 0010 5C020000 		.4byte	.Letext0
 473 0014 00000000 		.4byte	.Ltext0
 474 0018 33000000 		.4byte	.LASF15
 475 001c 01       		.byte	0x1
 476 001d 62000000 		.4byte	.LASF16
 477 0021 BA000000 		.4byte	.LASF17
 478 0025 02       		.uleb128 0x2
 479 0026 74553800 		.ascii	"tU8\000"
 480 002a 02       		.byte	0x2
 481 002b 47       		.byte	0x47
 482 002c 30000000 		.4byte	0x30
 483 0030 03       		.uleb128 0x3
 484 0031 7B000000 		.4byte	.LASF0
 485 0035 01       		.byte	0x1
 486 0036 08       		.byte	0x8
 487 0037 03       		.uleb128 0x3
 488 0038 A2000000 		.4byte	.LASF1
 489 003c 02       		.byte	0x2
 490 003d 07       		.byte	0x7
 491 003e 03       		.uleb128 0x3
 492 003f 95000000 		.4byte	.LASF2
 493 0043 04       		.byte	0x4
 494 0044 07       		.byte	0x7
 495 0045 02       		.uleb128 0x2
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 14


 496 0046 74533800 		.ascii	"tS8\000"
 497 004a 02       		.byte	0x2
 498 004b 4A       		.byte	0x4a
 499 004c 50000000 		.4byte	0x50
 500 0050 03       		.uleb128 0x3
 501 0051 3F000000 		.4byte	.LASF3
 502 0055 01       		.byte	0x1
 503 0056 06       		.byte	0x6
 504 0057 03       		.uleb128 0x3
 505 0058 00000000 		.4byte	.LASF4
 506 005c 02       		.byte	0x2
 507 005d 05       		.byte	0x5
 508 005e 04       		.uleb128 0x4
 509 005f 696E7400 		.ascii	"int\000"
 510 0063 04       		.byte	0x4
 511 0064 05       		.byte	0x5
 512 0065 03       		.uleb128 0x3
 513 0066 59000000 		.4byte	.LASF5
 514 006a 04       		.byte	0x4
 515 006b 05       		.byte	0x5
 516 006c 03       		.uleb128 0x3
 517 006d 4B000000 		.4byte	.LASF6
 518 0071 08       		.byte	0x8
 519 0072 05       		.byte	0x5
 520 0073 03       		.uleb128 0x3
 521 0074 E1000000 		.4byte	.LASF7
 522 0078 04       		.byte	0x4
 523 0079 07       		.byte	0x7
 524 007a 03       		.uleb128 0x3
 525 007b E1000000 		.4byte	.LASF7
 526 007f 04       		.byte	0x4
 527 0080 07       		.byte	0x7
 528 0081 03       		.uleb128 0x3
 529 0082 B5000000 		.4byte	.LASF8
 530 0086 01       		.byte	0x1
 531 0087 08       		.byte	0x8
 532 0088 03       		.uleb128 0x3
 533 0089 14000000 		.4byte	.LASF9
 534 008d 08       		.byte	0x8
 535 008e 07       		.byte	0x7
 536 008f 05       		.uleb128 0x5
 537 0090 F1000000 		.4byte	0xf1
 538 0094 01       		.byte	0x1
 539 0095 F3000000 		.4byte	.LASF18
 540 0099 01       		.byte	0x1
 541 009a 27       		.byte	0x27
 542 009b 01       		.byte	0x1
 543 009c 25000000 		.4byte	0x25
 544 00a0 00000000 		.4byte	.LFB2
 545 00a4 5C020000 		.4byte	.LFE2
 546 00a8 00000000 		.4byte	.LLST0
 547 00ac 06       		.uleb128 0x6
 548 00ad FE000000 		.4byte	.LASF10
 549 00b1 01       		.byte	0x1
 550 00b2 28       		.byte	0x28
 551 00b3 25000000 		.4byte	0x25
 552 00b7 2C000000 		.4byte	.LLST1
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 15


 553 00bb 07       		.uleb128 0x7
 554 00bc 89000000 		.4byte	.LASF11
 555 00c0 01       		.byte	0x1
 556 00c1 29       		.byte	0x29
 557 00c2 F1000000 		.4byte	0xf1
 558 00c6 02       		.byte	0x2
 559 00c7 91       		.byte	0x91
 560 00c8 66       		.sleb128 -26
 561 00c9 07       		.uleb128 0x7
 562 00ca 6F000000 		.4byte	.LASF12
 563 00ce 01       		.byte	0x1
 564 00cf 2A       		.byte	0x2a
 565 00d0 01010000 		.4byte	0x101
 566 00d4 02       		.byte	0x2
 567 00d5 91       		.byte	0x91
 568 00d6 5C       		.sleb128 -36
 569 00d7 07       		.uleb128 0x7
 570 00d8 2B000000 		.4byte	.LASF13
 571 00dc 01       		.byte	0x1
 572 00dd 2B       		.byte	0x2b
 573 00de 11010000 		.4byte	0x111
 574 00e2 02       		.byte	0x2
 575 00e3 91       		.byte	0x91
 576 00e4 4E       		.sleb128 -50
 577 00e5 08       		.uleb128 0x8
 578 00e6 0A000000 		.4byte	.LASF14
 579 00ea 01       		.byte	0x1
 580 00eb 2C       		.byte	0x2c
 581 00ec 45000000 		.4byte	0x45
 582 00f0 00       		.byte	0x0
 583 00f1 09       		.uleb128 0x9
 584 00f2 01010000 		.4byte	0x101
 585 00f6 25000000 		.4byte	0x25
 586 00fa 0A       		.uleb128 0xa
 587 00fb 73000000 		.4byte	0x73
 588 00ff 09       		.byte	0x9
 589 0100 00       		.byte	0x0
 590 0101 09       		.uleb128 0x9
 591 0102 11010000 		.4byte	0x111
 592 0106 25000000 		.4byte	0x25
 593 010a 0A       		.uleb128 0xa
 594 010b 73000000 		.4byte	0x73
 595 010f 09       		.byte	0x9
 596 0110 00       		.byte	0x0
 597 0111 0B       		.uleb128 0xb
 598 0112 25000000 		.4byte	0x25
 599 0116 0A       		.uleb128 0xa
 600 0117 73000000 		.4byte	0x73
 601 011b 0D       		.byte	0xd
 602 011c 00       		.byte	0x0
 603 011d 00       		.byte	0x0
 604              		.section	.debug_abbrev
 605 0000 01       		.uleb128 0x1
 606 0001 11       		.uleb128 0x11
 607 0002 01       		.byte	0x1
 608 0003 10       		.uleb128 0x10
 609 0004 06       		.uleb128 0x6
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 16


 610 0005 12       		.uleb128 0x12
 611 0006 01       		.uleb128 0x1
 612 0007 11       		.uleb128 0x11
 613 0008 01       		.uleb128 0x1
 614 0009 25       		.uleb128 0x25
 615 000a 0E       		.uleb128 0xe
 616 000b 13       		.uleb128 0x13
 617 000c 0B       		.uleb128 0xb
 618 000d 03       		.uleb128 0x3
 619 000e 0E       		.uleb128 0xe
 620 000f 1B       		.uleb128 0x1b
 621 0010 0E       		.uleb128 0xe
 622 0011 00       		.byte	0x0
 623 0012 00       		.byte	0x0
 624 0013 02       		.uleb128 0x2
 625 0014 16       		.uleb128 0x16
 626 0015 00       		.byte	0x0
 627 0016 03       		.uleb128 0x3
 628 0017 08       		.uleb128 0x8
 629 0018 3A       		.uleb128 0x3a
 630 0019 0B       		.uleb128 0xb
 631 001a 3B       		.uleb128 0x3b
 632 001b 0B       		.uleb128 0xb
 633 001c 49       		.uleb128 0x49
 634 001d 13       		.uleb128 0x13
 635 001e 00       		.byte	0x0
 636 001f 00       		.byte	0x0
 637 0020 03       		.uleb128 0x3
 638 0021 24       		.uleb128 0x24
 639 0022 00       		.byte	0x0
 640 0023 03       		.uleb128 0x3
 641 0024 0E       		.uleb128 0xe
 642 0025 0B       		.uleb128 0xb
 643 0026 0B       		.uleb128 0xb
 644 0027 3E       		.uleb128 0x3e
 645 0028 0B       		.uleb128 0xb
 646 0029 00       		.byte	0x0
 647 002a 00       		.byte	0x0
 648 002b 04       		.uleb128 0x4
 649 002c 24       		.uleb128 0x24
 650 002d 00       		.byte	0x0
 651 002e 03       		.uleb128 0x3
 652 002f 08       		.uleb128 0x8
 653 0030 0B       		.uleb128 0xb
 654 0031 0B       		.uleb128 0xb
 655 0032 3E       		.uleb128 0x3e
 656 0033 0B       		.uleb128 0xb
 657 0034 00       		.byte	0x0
 658 0035 00       		.byte	0x0
 659 0036 05       		.uleb128 0x5
 660 0037 2E       		.uleb128 0x2e
 661 0038 01       		.byte	0x1
 662 0039 01       		.uleb128 0x1
 663 003a 13       		.uleb128 0x13
 664 003b 3F       		.uleb128 0x3f
 665 003c 0C       		.uleb128 0xc
 666 003d 03       		.uleb128 0x3
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 17


 667 003e 0E       		.uleb128 0xe
 668 003f 3A       		.uleb128 0x3a
 669 0040 0B       		.uleb128 0xb
 670 0041 3B       		.uleb128 0x3b
 671 0042 0B       		.uleb128 0xb
 672 0043 27       		.uleb128 0x27
 673 0044 0C       		.uleb128 0xc
 674 0045 49       		.uleb128 0x49
 675 0046 13       		.uleb128 0x13
 676 0047 11       		.uleb128 0x11
 677 0048 01       		.uleb128 0x1
 678 0049 12       		.uleb128 0x12
 679 004a 01       		.uleb128 0x1
 680 004b 40       		.uleb128 0x40
 681 004c 06       		.uleb128 0x6
 682 004d 00       		.byte	0x0
 683 004e 00       		.byte	0x0
 684 004f 06       		.uleb128 0x6
 685 0050 34       		.uleb128 0x34
 686 0051 00       		.byte	0x0
 687 0052 03       		.uleb128 0x3
 688 0053 0E       		.uleb128 0xe
 689 0054 3A       		.uleb128 0x3a
 690 0055 0B       		.uleb128 0xb
 691 0056 3B       		.uleb128 0x3b
 692 0057 0B       		.uleb128 0xb
 693 0058 49       		.uleb128 0x49
 694 0059 13       		.uleb128 0x13
 695 005a 02       		.uleb128 0x2
 696 005b 06       		.uleb128 0x6
 697 005c 00       		.byte	0x0
 698 005d 00       		.byte	0x0
 699 005e 07       		.uleb128 0x7
 700 005f 34       		.uleb128 0x34
 701 0060 00       		.byte	0x0
 702 0061 03       		.uleb128 0x3
 703 0062 0E       		.uleb128 0xe
 704 0063 3A       		.uleb128 0x3a
 705 0064 0B       		.uleb128 0xb
 706 0065 3B       		.uleb128 0x3b
 707 0066 0B       		.uleb128 0xb
 708 0067 49       		.uleb128 0x49
 709 0068 13       		.uleb128 0x13
 710 0069 02       		.uleb128 0x2
 711 006a 0A       		.uleb128 0xa
 712 006b 00       		.byte	0x0
 713 006c 00       		.byte	0x0
 714 006d 08       		.uleb128 0x8
 715 006e 34       		.uleb128 0x34
 716 006f 00       		.byte	0x0
 717 0070 03       		.uleb128 0x3
 718 0071 0E       		.uleb128 0xe
 719 0072 3A       		.uleb128 0x3a
 720 0073 0B       		.uleb128 0xb
 721 0074 3B       		.uleb128 0x3b
 722 0075 0B       		.uleb128 0xb
 723 0076 49       		.uleb128 0x49
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 18


 724 0077 13       		.uleb128 0x13
 725 0078 00       		.byte	0x0
 726 0079 00       		.byte	0x0
 727 007a 09       		.uleb128 0x9
 728 007b 01       		.uleb128 0x1
 729 007c 01       		.byte	0x1
 730 007d 01       		.uleb128 0x1
 731 007e 13       		.uleb128 0x13
 732 007f 49       		.uleb128 0x49
 733 0080 13       		.uleb128 0x13
 734 0081 00       		.byte	0x0
 735 0082 00       		.byte	0x0
 736 0083 0A       		.uleb128 0xa
 737 0084 21       		.uleb128 0x21
 738 0085 00       		.byte	0x0
 739 0086 49       		.uleb128 0x49
 740 0087 13       		.uleb128 0x13
 741 0088 2F       		.uleb128 0x2f
 742 0089 0B       		.uleb128 0xb
 743 008a 00       		.byte	0x0
 744 008b 00       		.byte	0x0
 745 008c 0B       		.uleb128 0xb
 746 008d 01       		.uleb128 0x1
 747 008e 01       		.byte	0x1
 748 008f 49       		.uleb128 0x49
 749 0090 13       		.uleb128 0x13
 750 0091 00       		.byte	0x0
 751 0092 00       		.byte	0x0
 752 0093 00       		.byte	0x0
 753              		.section	.debug_pubnames,"",%progbits
 754 0000 1D000000 		.4byte	0x1d
 755 0004 0200     		.2byte	0x2
 756 0006 00000000 		.4byte	.Ldebug_info0
 757 000a 1E010000 		.4byte	0x11e
 758 000e 8F000000 		.4byte	0x8f
 759 0012 74657374 		.ascii	"testEEPROM\000"
 759      45455052 
 759      4F4D00
 760 001d 00000000 		.4byte	0x0
 761              		.section	.debug_aranges,"",%progbits
 762 0000 1C000000 		.4byte	0x1c
 763 0004 0200     		.2byte	0x2
 764 0006 00000000 		.4byte	.Ldebug_info0
 765 000a 04       		.byte	0x4
 766 000b 00       		.byte	0x0
 767 000c 0000     		.2byte	0x0
 768 000e 0000     		.2byte	0x0
 769 0010 00000000 		.4byte	.Ltext0
 770 0014 5C020000 		.4byte	.Letext0-.Ltext0
 771 0018 00000000 		.4byte	0x0
 772 001c 00000000 		.4byte	0x0
 773              		.section	.debug_str,"MS",%progbits,1
 774              	.LASF4:
 775 0000 73686F72 		.ascii	"short int\000"
 775      7420696E 
 775      7400
 776              	.LASF14:
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 19


 777 000a 6572726F 		.ascii	"errorCode\000"
 777      72436F64 
 777      6500
 778              	.LASF9:
 779 0014 6C6F6E67 		.ascii	"long long unsigned int\000"
 779      206C6F6E 
 779      6720756E 
 779      7369676E 
 779      65642069 
 780              	.LASF13:
 781 002b 74657374 		.ascii	"testBuf\000"
 781      42756600 
 782              	.LASF15:
 783 0033 474E5520 		.ascii	"GNU C 4.1.1\000"
 783      4320342E 
 783      312E3100 
 784              	.LASF3:
 785 003f 7369676E 		.ascii	"signed char\000"
 785      65642063 
 785      68617200 
 786              	.LASF6:
 787 004b 6C6F6E67 		.ascii	"long long int\000"
 787      206C6F6E 
 787      6720696E 
 787      7400
 788              	.LASF5:
 789 0059 6C6F6E67 		.ascii	"long int\000"
 789      20696E74 
 789      00
 790              	.LASF16:
 791 0062 65657072 		.ascii	"eepromTest.c\000"
 791      6F6D5465 
 791      73742E63 
 791      00
 792              	.LASF12:
 793 006f 74657374 		.ascii	"testString2\000"
 793      53747269 
 793      6E673200 
 794              	.LASF0:
 795 007b 756E7369 		.ascii	"unsigned char\000"
 795      676E6564 
 795      20636861 
 795      7200
 796              	.LASF11:
 797 0089 74657374 		.ascii	"testString1\000"
 797      53747269 
 797      6E673100 
 798              	.LASF2:
 799 0095 756E7369 		.ascii	"unsigned int\000"
 799      676E6564 
 799      20696E74 
 799      00
 800              	.LASF1:
 801 00a2 73686F72 		.ascii	"short unsigned int\000"
 801      7420756E 
 801      7369676E 
 801      65642069 
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 20


 801      6E7400
 802              	.LASF8:
 803 00b5 63686172 		.ascii	"char\000"
 803      00
 804              	.LASF17:
 805 00ba 2F637967 		.ascii	"/cygdrive/c/Embedded/eclipse/Demo/2138\000"
 805      64726976 
 805      652F632F 
 805      456D6265 
 805      64646564 
 806              	.LASF7:
 807 00e1 6C6F6E67 		.ascii	"long unsigned int\000"
 807      20756E73 
 807      69676E65 
 807      6420696E 
 807      7400
 808              	.LASF18:
 809 00f3 74657374 		.ascii	"testEEPROM\000"
 809      45455052 
 809      4F4D00
 810              	.LASF10:
 811 00fe 65657072 		.ascii	"eepromTestResultOK\000"
 811      6F6D5465 
 811      73745265 
 811      73756C74 
 811      4F4B00
 812              		.ident	"GCC: (GNU) 4.1.1"
ARM GAS  /cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 eepromTest.c
/cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s:1      .text:00000000 $t
/cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s:65     .text:00000000 testEEPROM
/cygdrive/c/Users/embedded/AppData/Local/Temp/ccuXKC2i.s:376    .text:00000220 $d

UNDEFINED SYMBOLS
memcpy
eepromWrite
simplePrintf
eepromPoll
eepromPageRead
strlen
